name: Deploy MERN to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout repo
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Configure AWS CLI
    - name: Configure AWS
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # 3. Login to ECR
    - name: Login to ECR
      run: |
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
        | docker login --username AWS --password-stdin ${{ secrets.ECR_FRONTEND_REPO }}
        aws ecr get-login-password --region ${{ secrets.AWS_REGION }} \
        | docker login --username AWS --password-stdin ${{ secrets.ECR_BACKEND_REPO }}

    # 4. Build and push frontend
    - name: Build and Push Frontend Image
      run: |
        docker buildx build --platform linux/amd64 \
          -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/hotel-heaven-frontend-ecr:latest \
          . \
          --push

    # 5. Build and push backend
    - name: Build & Push Backend
      run: |
        docker buildx build --platform linux/amd64 \
          -t ${{ secrets.ECR_BACKEND_REPO }}:latest \
          ./backend --push

    # 6. Deploy to EC2
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Pull latest images
          docker pull ${{ secrets.ECR_FRONTEND_REPO }}:latest
          docker pull ${{ secrets.ECR_BACKEND_REPO }}:latest

          # Navigate to compose directory
          cd ~/restaurant-pos

          # Stop old containers and run new ones
          docker-compose down
          docker-compose up -d
